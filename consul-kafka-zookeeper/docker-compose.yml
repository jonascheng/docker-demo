---
version: "3.7"

services:

  consul-server:
    image: hashicorp/consul:1.8.10
    container_name: consul-server
    restart: on-failure
    command: [
      "consul", "agent",
      "-config-file", "/config/config.hcl",
      "-bind", "${HOSTIP}",
      "-advertise", "${HOSTIP}",
      # with consul keygen
      "-encrypt", "vyIt2UJcg16ULc1celZnbAUu7Wm69TeWksDNTlLZ1Z0="]
    volumes:
    - ./consul:/config
    - /home/vagrant/consul/data:/consul/data
    network_mode: "host"

  # stateless:
  #   image: docker.io/bitnami/kafka:2.2.1-debian-9-r33
  #   container_name: stateless
  #   restart: on-failure
  #   depends_on:
  #     - consul-server
  #     - redis
  #     - redis-sentinel
  #   environment:
  #     - ALLOW_EMPTY_PASSWORD=yes
  #   networks:
  #     vpcbr:
  #       ipv4_address: 169.254.2.12

  kafka:
    image: docker.io/bitnami/kafka:2.2.1-debian-9-r33
    container_name: kafka
    restart: on-failure
    ports:
      - "0.0.0.0:9092:9092"
    volumes:
      - "/home/vagrant/kafka/data:/bitnami/kafka/data"
    environment:
      - KAFKA_BROKER_ID=${KAFKA_BROKER_ID}
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://${HOSTIP}:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    user: root
    depends_on:
      - consul-server
      - zookeeper
    networks:
      vpcbr:
        ipv4_address: 169.254.3.1

  zookeeper:
    image: docker.io/bitnami/zookeeper:3.4.14-debian-9-r33
    container_name: zookeeper
    restart: on-failure
    ports:
      - "0.0.0.0:2181:2181"
      - "0.0.0.0:2888:2888"
      - "0.0.0.0:3888:3888"
    volumes:
      - "/home/vagrant/zookeeper/data:/bitnami/zookeeper/data"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_SERVER_ID=${ZOO_SERVER_ID}
      - ZOO_SERVERS=${ZOO_SERVERS}
    user: root
    depends_on:
      - consul-server
    networks:
      vpcbr:
        ipv4_address: 169.254.3.2

  # redis-proxy:
  #   image: haproxy:lts-alpine
  #   container_name: redis-proxy
  #   restart: on-failure
  #   depends_on:
  #     - "consul-server"
  #     - "redis"
  #     - "redis-proxy-template"
  #   volumes:
  #   - "./haproxy:/usr/local/etc/haproxy:ro"
  #   networks:
  #     vpcbr:
  #       ipv4_address: 169.254.2.11

  # redis-proxy-template:
  #   build:
  #     context: ./redis-proxy-template/
  #     dockerfile: Dockerfile
  #   image: redis-proxy-template-image
  #   container_name: redis-proxy-template
  #   restart: on-failure
  #   depends_on:
  #     - "consul-server"
  #     - "redis-sentinel"
  #   volumes:
  #   - "./haproxy:/tmp"
  #   - "/var/run/docker.sock:/var/run/docker.sock"
  #   environment:
  #     CONSUL_HTTP_ADDR: http://169.254.1.1:8500
  #     REDIS_PASSWORD: supersecret
  #     REDIS_PORT_NUMBER: 6379
  #     REDIS_SLAVE_INGRESS_PORT_NUMBER: 6380
  #   command: >
  #     consul-template -template "/tmp/haproxy.ctmpl:/tmp/haproxy.cfg:docker kill -s HUP redis-proxy"
  #   network_mode: "service:redis"

networks:
  vpcbr:
    driver: bridge
    ipam:
      config:
      - subnet: 169.254.0.0/16
        gateway: 169.254.1.1